Q1. Odd Even LL
https://leetcode.com/problems/odd-even-linked-list/

class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if(head==NULL)
            return nullptr;
        
        ListNode *odd,*even,*oh,*eh;
        oh=odd=head;
        eh=even=head->next;
        while(even && even->next)
        {  
        odd->next=odd->next->next;
            even->next=even->next->next;
            odd=odd->next;
            even=even->next;
        
        }
        odd->next=eh;
        return head;
    }
};

Q2.Reverse Linked List
//https://leetcode.com/problems/reverse-linked-list/

class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        
        ListNode *r,*q,*p;
        r=q=NULL;
        p=head;
        while(p)
        {
            r=q;
            q=p;
            p=p->next;
            q->next=r;
            
        }
        head=q;
        
        return head;
    }
};


Q3. Palindrome LL

//
